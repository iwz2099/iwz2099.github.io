<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rancher on 奔跑的丸子</title>
    <link>https://wanzi.im/tags/rancher/</link>
    <description>Recent content in rancher on 奔跑的丸子</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Tue, 17 Dec 2019 10:22:42 +0800</lastBuildDate>
    
	<atom:link href="https://wanzi.im/tags/rancher/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>kubernetes集群部署traefik2.1</title>
      <link>https://wanzi.im/posts/2019/12/kubernetes-traefik-v2.1-deploy/</link>
      <pubDate>Tue, 17 Dec 2019 10:22:42 +0800</pubDate>
      
      <guid>https://wanzi.im/posts/2019/12/kubernetes-traefik-v2.1-deploy/</guid>
      <description>架构&amp;amp;概念 Traefik2.x版本相比1.7.x架构有很大变化，正如上边这张架构图，最主要的功能是支持了TCP协议、增加了Router概念。
这里我们采用在kubernetes集群部署Traefik2.1，业务访问通过haproxy请求到traefik Ingress，下边是搭建过程涉及到一些概念：
 EntryPoints：Traefik的网络入口，定义请求接受的端口(不分http或tcp) CRD：Kubernetes API的扩展 IngressRouter：将传入请求转发到可以处理请求的服务，另外转发请求之前可以通过Middlewares动态更新请求 Middlewares：请求到达服务之前进行动态处理请求参数，比如header或转发规则等等。 TraefikService：如果果CRD定义了了这种类型，IngressRouter可以直接引用，处在IngressRouter和服务之间,类似于Maesh架构，更适合较为复杂场景,一般情况可以不使用。  kubernetes配置SSL证书 因为业务服务使用https,这里先配置下SSL证书:
1  kubectl -n cattle-system create secret tls tls-rancher-ingress --cert=test.cn.pem --key=test.cn.key   CRD配置 这里定义了IngressRoute、Middleware、TLSOption、IngressRouteTCP、TraefikService,其中TraefikService是在2.1版本新增加的CRD
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72  apiVersion: apiextensions.</description>
    </item>
    
    <item>
      <title>自动化部署k8s集群</title>
      <link>https://wanzi.im/posts/2019/12/kubernetes-deploy-automation/</link>
      <pubDate>Thu, 12 Dec 2019 10:22:42 +0800</pubDate>
      
      <guid>https://wanzi.im/posts/2019/12/kubernetes-deploy-automation/</guid>
      <description>环境准备  Master节点
1 2 3  172.16.244.14 172.16.244.16 172.16.244.18   Node节点
1 2  172.16.244.25 172.16.244.27   Master节点VIP地址: 172.16.243.13
 部署工具:Ansible/kubeasz
  初始化环境  安装Ansible
1 2 3 4 5  apt update apt-get install ansible expect git clone https://github.com/easzlab/kubeasz cd kubeasz cp * /etc/ansible/   配置ansible免密登录
1 2  ssh-keygen -t rsa -b 2048 #生成密钥 ./tools/yc-ssh-key-copy.sh hosts root &amp;#39;rootpassword&amp;#39;   准备二进制文件
1 2  cd tools .</description>
    </item>
    
  </channel>
</rss>